class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        print grid
        #grid = [[1,1,1,1,0],[1,1,0,0,0],[0,0,1,0,0],[0,0,0,0,1]]
        #print grid[0][0]
        l = set()
        count = 0
        for i in xrange(len(grid)):
            for j in xrange(len(grid[0])):
                if int(grid[i][j]) == 1:
                    grid[i][j] = 0
                    count += 1
                    added(l, grid, i, j)
                    while(len(l) != 0):
                        a = l.pop()
                        if int(grid[a[0]][a[1]]) == 1:
                            grid[a[0]][a[1]] = 0
                            added(l, grid, a[0], a[1])
        return count


def added(l, grid, i, j):
    if i-1 >= 0:
        if int(grid[i-1][j]) == 1:
            l.add((i-1,j))
    if i+1 < len(grid):
        if int(grid[i+1][j]) == 1:
            l.add((i+1,j))
    
    if j-1 >= 0:
        if int(grid[i][j-1]) == 1:
            l.add((i,j-1))
    if j+1 < len(grid[0]):
        if int(grid[i][j+1]) == 1:
            l.add((i,j+1))
